# PUBLISH CI configure

name: PUBLISH CI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone the item from github
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          cd ./dev
          yarn

      - name: Lint
        run: |
          cd ./dev
          yarn lint

      - name: Build
        run: |
          cd ./dev
          yarn build
          echo "Build work success! will publish to npmjs..."

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}

      - name: Publish pkg
        run: |
          cd ./dev
        uses: bcomnes/npm-bump@v2.0.2
        with:
          # The email address used to create the version commit with.
          git_email: 1061393710@qq.com
          # The name to use for the version commit. e.g. github.actor
          git_username: Perfumere
          # The version bump type to perform (e.g. major, minor, path). See npm version docs for more info.  Pass this as an interactive variable.
          newversion: patch
          # Run git push --follow-tags after running npm version.  Enable this if you dont configure a prepublishOnly hook that pushes git commits.
          push_version_commit: "Publish pkg ${{ steps.get_version.outputs.VERSION }}"
          # The command to run after npm version.  Useful if you are just using npm to version a package, but not publish to npm (like an action).
          publish_cmd: npm publish --access public
          # Pass the secrets.GITHUB_TOKEN to enable gh-release capabilities.
          github_token: ${{ secrets.TOKEN }}
          # An npm token scoped for publishing.  Used to create the release.
          npm_token: ${{ secrets.NPM_PUBLISH_TOKEN }}
